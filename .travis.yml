language: python
python: "3.7"

matrix:
    include:
        - os: linux
          dist: bionic
          compiler: gcc
          env:
            - CMAKE_COMPILER=g++
            - CONAN_COMPILER=gcc
            - CONAN_COMPILER_VERSION=7
            - CONAN_LIBCXX=libstdc++11
          addons:
            apt:
              packages:
                - libgl1-mesa-dev
                - libgl1-mesa-glx
                - libglu1-mesa-dev
                - libglew-dev
                - libgl-dev
                - freeglut3-dev
                - xorg-dev
                - mesa-utils
                - mesa-common-dev
                - libx11-xcb-dev
                - libxcb-render0-dev
                - libxcb-render-util0-dev
                - libxcb-xkb-dev
                - libxcb-icccm4-dev
                - libxcb-render-util0-dev
                - libxcb-image0-dev
                - libxcb-keysyms1-dev
                - libxcb-randr0-dev
                - libxcb-shape0-dev
                - libxcb-sync-dev
                - libxcb-xfixes0-dev
                - libxcb-xinerama0-dev

# Disabled clang because I get linking errors when trying to build. This should be re-enabled when
# Issue #32 is resolved (https://github.com/PhantomGrazzler/SmartNodeServer/issues/32).
#        - os: linux
#          dist: bionic
#          compiler: clang
#          env:
#            - CMAKE_COMPILER=clang++
#            - CONAN_COMPILER=clang
#            - CONAN_COMPILER_VERSION=7.0
#            - CONAN_LIBCXX=libc++

install:
    # Install conan
    - pip install conan
    # Automatic detection of your arch, compiler, etc.
    - conan user

script:
    - mkdir build
    - cd build
    # Download dependencies and build project
    - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
    - conan install .. -s build_type=Debug --build missing -s compiler=${CONAN_COMPILER} -s compiler.libcxx=${CONAN_LIBCXX} -s compiler.version=${CONAN_COMPILER_VERSION}
    # Call your build system
    - cmake -DCMAKE_CXX_COMPILER=${CMAKE_COMPILER} -DCMAKE_BUILD_TYPE=Debug ..
    - cmake --build . -j `nproc`
